<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAgCUAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABs7nAgdLl5ALTdSaklT
        aHhIUmVgQ09rLklYkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAD1brgAlSbQAEDatAh5ErgAAAAAAAAAAAAAAAAAAAAAAAAAAABk8
        mxxlcYvZi5KX/6uzu/+rs7v/pa2193mFmhwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOHlYyV19tv4SOmOmYoq7dbHWCoR4wXigcQ60AAAAAAAAA
        AAAAAAAAAAAAAAAAAACyvsqdq7S9/7nCy//CzNT/tb7G/YSRoyQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABveoXNWF5l/09UW/9SV13/aW91/3qC
        if90fIP/Y2lw/3Z9hP+Unab/t8HK/8vV3f/P2eL/nqev/1BqfMFfc4HRjZeg/8HM1f/Q2+P/09zl/87X
        3/+wvsvbYZnYCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGm25gRueIHxXmNq/1xi
        af9udXz/jpef/52nr/+Zpa7/k52l/6KstP+6w8z/xtDY/83X3//K1Nz/lZ2l/3uEjP+Woq3/tcDK/83Y
        4f/T3ub/1N7m/9DY3/+gtcpwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAISi
        tkRucnf/Ymhv/2Bnbv9/iJD/q7a+/7fCzP+1wcv/sr7G/7zGz//N1t//0drj/8/Z4v/H0Nf/oaqz/6iy
        vP+6xtH/ydXf/9Hc5f/T3uf/1d/n/8rS2v90p9UuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJKjr3BzeH7/ZWxz/0lba/9SbIX/p7XA/8LO2P+/y9X/vsrS/8fR2f/Y4en/2ePr/9bf
        5//I0dj/tsDI/73Gz//J1N3/1N7n/9Pe5//U3uf/1d7m/7bH0/VeqOgKAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAACouNtMpa65/6CqvNvF1PcsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJOx
        3SqstLr/ytTf/4+d0v96iL//rbnM/7zO4tEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgsOIqsr3Pn7fJ8BgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAI2v5iKyusH/ucXf/5Gh4/+Hlcn/uMTV/7fL5nwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAG+Y8xK9xs/9rLrn/56s6v+VpNH/xNDf8ZGz6xoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICk7wDAytrtqLjx/56u5/+uu9b/ucvmdAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC4xdrfo7Tq/6Oy
        3v/Azd/Rg6bqBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAc8
        tQC8yd3RrLzj/7zK3vGxxesqBV7CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADJ2+jBztrk+7/P7FIKdu0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADE5vdavd/1XDpc1wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA=
</value>
  </data>
</root>